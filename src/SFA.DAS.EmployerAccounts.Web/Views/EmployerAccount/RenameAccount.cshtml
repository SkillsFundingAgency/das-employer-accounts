@model OrchestratorResponse<RenameEmployerAccountViewModel>

@{
    ViewBag.PageID = "page-change-account-name";
    ViewBag.Title = "Rename account";
    ViewBag.GaData.Vpv = "/page-change-account-name";

    var hashedAccountId = ViewContext.RouteData.Values[RouteValueKeys.HashedAccountId].ToString();
}

@if (Model.Data!.ErrorDictionary!.Any())
{
    <div class="govuk-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="govuk-error-summary">
        <h2 class="govuk-error-summary__title" id="error-summary-title">
            There is a problem
        </h2>
        <div class="govuk-error-summary__body">
            <ul class="govuk-list govuk-error-summary__list">
                @foreach (var error in Model.Data.ErrorDictionary)
                {
                    <li>
                        <a href="#@error.Key">
                            @error.Value
                        </a>
                    </li>
                }
            </ul>
        </div>
    </div>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
        <form method="post">
            <h1 class="govuk-heading-xl">Rename account</h1>
            <p>
                Your apprenticeship service account name should be the same as your organisation’s trading name. This is visible to training providers and helps them to find you in the service.
            </p>

            <div class="govuk-form-group">
                <dl class="das-definition-list">
                    <dt class="das-definition-list__title">Organisation name</dt>
                    <dd class="das-definition-list__definition">@Model.Data.LegalEntityName</dd>
                </dl>
            </div>
            
            <input type="hidden" value="true" name="ChangeAccountName"/>
            <input type="hidden" value="@Model.Data.CurrentName" name="CurrentName"/>

            <div class="govuk-form-group">
                <dl class="das-definition-list">
                    <dt class="das-definition-list__title">Account name</dt>
                    <dd class="das-definition-list__definition">@Model.Data.CurrentName</dd>
                </dl>
            </div>

            <div class="govuk-form-group @(!string.IsNullOrEmpty(Model.Data.NewNameError) ? "govuk-form-group--error" : "")">
                <label id="NewName-label" for="NewName" class="govuk-label">
                    New account name
                </label>

                @if (!string.IsNullOrEmpty(Model.Data.NewNameError))
                {
                    <span id="error-message-newname" class="govuk-error-message">
                        <span class="govuk-visually-hidden">Error:</span> @Model.Data.NewNameError
                    </span>
                }

                <input id="NewName" name="NewName" type="text" maxlength="100" class="govuk-input" aria-required="true"
                       aria-describedby="@(!string.IsNullOrEmpty(Model.Data.NewNameError) ? "error-message-newname" : "")"
                       value="@Model.Data.NewName"/>

            </div>

            <div class="govuk-button-group">
                <button type="submit" class="govuk-button" id="accept">Save and continue</button>
                <a asp-route="@RouteNames.EmployerTeamIndex" asp-route-hashedAccountId="@hashedAccountId"
                   class="govuk-link">
                    Cancel
                </a>
            </div>
        </form>
    </div>
</div>


@section breadcrumb {
    <div class="govuk-breadcrumbs">
        <ol class="govuk-breadcrumbs__list">
            <li class="govuk-breadcrumbs__list-item">
                <a asp-route="@RouteNames.EmployerTeamIndex" asp-route-hashedAccountId="@hashedAccountId" class="govuk-breadcrumbs__link">Home</a>
            </li>
            <li class="govuk-breadcrumbs__list-item">@ViewBag.Title</li>
        </ol>
    </div>
}