@using SFA.DAS.EmployerAccounts.Models.AccountTeam;
@using SFA.DAS.EmployerAccounts.Models;
@model OrchestratorResponse<SFA.DAS.EmployerAccounts.Web.ViewModels.EmployerTeamMembersViewModel>

@{
    ViewBag.PageID = "page-manage-team";
    ViewBag.Title = "Manage team members";
    ViewBag.Section = "team";
    ViewBag.ZenDeskLabel = "eas-view-team-member";
    ViewBag.GaData.Vpv = "/accounts/teams/view/page-manage-team";

    if (!string.IsNullOrEmpty(Model.FlashMessage?.HiddenFlashMessageInformation))
    {
        ViewBag.PageID = Model.FlashMessage.HiddenFlashMessageInformation;
    }

    string hashedAccountId = ViewContext.RouteData.Values[RouteValueKeys.HashedAccountId].ToString();
}

<div class="grid-row header-index">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">Your team</h1>
        @if (Model.Data.TeamMembers.Count == 0)
        {
            <p>TODO : EMPTY STATE</p>
        }
        else
        {
            <p class="lede">
                Invite team members from your organisation, control what they can do, remove members and cancel or resend invitations.
            </p>
        }
    </div>
    <div class="column-one-third">
        <form action="@Url.Action("Invite")" method="get">
            <input class="button action-add" id="addNewUser" type="submit" value="Invite a new member">
        </form>
    </div>
</div>

@if (Model.Data.TeamMembers.Count > 0)
{
    <div class="grid-row">
        <div class="column-full">
            <table class="responsive">
                <thead>
                    <tr>
                        <th scope="col">Name</th>
                        <th scope="col">What they can do</th>
                        <th scope="col">Status</th>
                        <th scope="col"><span class="vh">Action</span></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var teamMember in Model.Data.TeamMembers)
                {
                        <tr>
                            <td data-label="Name">
                                <div>@teamMember.Name</div>
                                <div class="responsive-detail">@teamMember.Email</div>
                            </td>
                            <td data-label="What they can do">@RoleStrings.GetRoleDescription(teamMember.Role)</td>
                            <td data-label="Status">@InvitationStatusStrings.ToString(teamMember.Status)</td>
                            <td class="link-right">
                                <a aria-label="View details for @teamMember.Name"
                                asp-route="@RouteNames.EmployerTeamReview"
                                asp-route-hashedAccountId="@hashedAccountId"
                                asp-route-email="@teamMember.Email">View<span class="vh"> details for @teamMember.Name</span></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
           
        </div>
    </div>
}

@section breadcrumb {
    <div class="breadcrumbs">
        <ol role="navigation">
            <li><a asp-route="@RouteNames.EmployerTeamIndex" asp-route-hashedAccountId="@hashedAccountId">Home</a></li>
            <li>Your team</li>
        </ol>
    </div>
}
